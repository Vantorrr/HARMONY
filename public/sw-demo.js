// Demo Service Worker –¥–ª—è Push —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
// –ò—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –∫–æ–≥–¥–∞ Firebase –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω

console.log('üéÆ Demo Service Worker –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');

// –û–±—Ä–∞–±–æ—Ç–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏
self.addEventListener('install', (event) => {
  console.log('üõ†Ô∏è Demo SW —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
  self.skipWaiting();
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∞–∫—Ç–∏–≤–∞—Ü–∏–∏
self.addEventListener('activate', (event) => {
  console.log('‚úÖ Demo SW –∞–∫—Ç–∏–≤–∏—Ä–æ–≤–∞–Ω');
  event.waitUntil(self.clients.claim());
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ push —Å–æ–æ–±—â–µ–Ω–∏–π (demo)
self.addEventListener('push', (event) => {
  console.log('üì± Demo push –ø–æ–ª—É—á–µ–Ω:', event);
  
  const defaultOptions = {
    title: '–¶–µ–Ω—Ç—Ä "–ì–∞—Ä–º–æ–Ω–∏—è"',
    body: '–£ –≤–∞—Å –Ω–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ!',
    icon: '/icon-192x192.png',
    badge: '/badge-72x72.png',
    tag: 'harmony-demo',
    data: {
      type: 'demo',
      timestamp: Date.now()
    }
  };

  let notificationOptions = defaultOptions;

  if (event.data) {
    try {
      const payload = event.data.json();
      notificationOptions = {
        ...defaultOptions,
        ...payload,
        ...payload.notification
      };
    } catch (error) {
      console.error('–û—à–∏–±–∫–∞ –ø–∞—Ä—Å–∏–Ω–≥–∞ push –¥–∞–Ω–Ω—ã—Ö:', error);
    }
  }

  event.waitUntil(
    self.registration.showNotification(notificationOptions.title, notificationOptions)
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–ª–∏–∫–æ–≤ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º
self.addEventListener('notificationclick', (event) => {
  console.log('üîî –ö–ª–∏–∫ –ø–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—é:', event.notification);
  
  event.notification.close();

  // –û—Ç–∫—Ä—ã–≤–∞–µ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
  event.waitUntil(
    self.clients.matchAll({ type: 'window' }).then((clientList) => {
      // –ï—Å–ª–∏ –µ—Å—Ç—å –æ—Ç–∫—Ä—ã—Ç—ã–µ –æ–∫–Ω–∞, —Ñ–æ–∫—É—Å–∏—Ä—É–µ–º—Å—è –Ω–∞ –Ω–∏—Ö
      for (const client of clientList) {
        if (client.url.includes('/') && 'focus' in client) {
          return client.focus();
        }
      }
      
      // –ò–Ω–∞—á–µ –æ—Ç–∫—Ä—ã–≤–∞–µ–º –Ω–æ–≤–æ–µ –æ–∫–Ω–æ
      if (self.clients.openWindow) {
        return self.clients.openWindow('/');
      }
    })
  );
});

// –û–±—Ä–∞–±–æ—Ç–∫–∞ –∑–∞–∫—Ä—ã—Ç–∏—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
self.addEventListener('notificationclose', (event) => {
  console.log('‚ùå –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∑–∞–∫—Ä—ã—Ç–æ:', event.notification);
});