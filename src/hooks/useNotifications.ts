// –•—É–∫ –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –ø—É—à-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏ Harmony Fitness
import { useState, useEffect, useCallback } from 'react';
import { 
  initializeMessaging, 
  getMessagingToken, 
  requestNotificationPermission, 
  onMessageListener,
  showLocalNotification,
  type NotificationPayload 
} from '@/lib/firebase';

interface NotificationState {
  isSupported: boolean;
  permission: NotificationPermission | null;
  token: string | null;
  isLoading: boolean;
  error: string | null;
}

interface NotificationPreferences {
  reminders: boolean;
  expiry: boolean;
  balance: boolean;
  promotions: boolean;
}

export function useNotifications() {
  const [state, setState] = useState<NotificationState>({
    isSupported: false,
    permission: null,
    token: null,
    isLoading: true,
    error: null
  });

  const [preferences, setPreferences] = useState<NotificationPreferences>({
    reminders: true,
    expiry: true,
    balance: true,
    promotions: false
  });

  // –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ–¥–¥–µ—Ä–∂–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
  useEffect(() => {
    const checkSupport = () => {
      const isSupported = 'Notification' in window && 'serviceWorker' in navigator;
      const permission = isSupported ? Notification.permission : null;
      
      setState(prev => ({
        ...prev,
        isSupported,
        permission,
        isLoading: false
      }));
    };

    checkSupport();
  }, []);

  // –ó–∞–≥—Ä—É–∑–∫–∞ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –∏–∑ localStorage
  useEffect(() => {
    const savedPreferences = localStorage.getItem('harmony_notification_preferences');
    if (savedPreferences) {
      try {
        setPreferences(JSON.parse(savedPreferences));
      } catch (error) {
        console.error('Error loading notification preferences:', error);
      }
    }
  }, []);

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –≤ localStorage
  const savePreferences = useCallback((newPreferences: NotificationPreferences) => {
    setPreferences(newPreferences);
    localStorage.setItem('harmony_notification_preferences', JSON.stringify(newPreferences));
  }, []);

  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è Firebase Messaging
  const initializeNotifications = useCallback(async () => {
    if (!state.isSupported) {
      setState(prev => ({ ...prev, error: '–£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞—é—Ç—Å—è' }));
      return false;
    }

    setState(prev => ({ ...prev, isLoading: true, error: null }));

    try {
      // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è messaging
      const messaging = initializeMessaging();
      if (!messaging) {
        throw new Error('Failed to initialize messaging');
      }

      // –ó–∞–ø—Ä–æ—Å —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è
      const hasPermission = await requestNotificationPermission();
      if (!hasPermission) {
        setState(prev => ({ 
          ...prev, 
          permission: 'denied', 
          isLoading: false,
          error: '–†–∞–∑—Ä–µ—à–µ–Ω–∏–µ –Ω–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –Ω–µ –ø—Ä–µ–¥–æ—Å—Ç–∞–≤–ª–µ–Ω–æ' 
        }));
        return false;
      }

      // –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞
      const token = await getMessagingToken();
      if (!token) {
        setState(prev => ({ 
          ...prev, 
          isLoading: false,
          error: '–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Ç–æ–∫–µ–Ω –¥–ª—è —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π' 
        }));
        return false;
      }

      // –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
      localStorage.setItem('harmony_fcm_token', token);

      setState(prev => ({
        ...prev,
        permission: 'granted',
        token,
        isLoading: false,
        error: null
      }));

      console.log('üîî Notifications initialized successfully');
      return true;

    } catch (error) {
      console.error('Error initializing notifications:', error);
      setState(prev => ({
        ...prev,
        isLoading: false,
        error: error instanceof Error ? error.message : '–û—à–∏–±–∫–∞ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π'
      }));
      return false;
    }
  }, [state.isSupported]);

  // –ü–æ–¥–ø–∏—Å–∫–∞ –Ω–∞ –≤—Ö–æ–¥—è—â–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è
  useEffect(() => {
    if (state.permission === 'granted') {
      const unsubscribe = onMessageListener().then((payload: any) => {
        console.log('Received foreground message:', payload);
        
        // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –µ—Å–ª–∏ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –≤ —Ñ–æ–∫—É—Å–µ
        if (payload.notification) {
          const notificationPayload: NotificationPayload = {
            title: payload.notification.title,
            body: payload.notification.body,
            icon: payload.notification.icon,
            data: payload.data
          };
          
          showLocalNotification(notificationPayload);
        }
      }).catch(error => {
        console.error('Error setting up message listener:', error);
      });

      return () => {
        // Cleanup if needed
      };
    }
  }, [state.permission]);

  // –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π –æ—Ç Service Worker
  useEffect(() => {
    const handleServiceWorkerMessage = (event: MessageEvent) => {
      if (event.data && event.data.type === 'NOTIFICATION_CLICK') {
        console.log('Notification clicked, navigating to:', event.data.url);
        // –ù–∞–≤–∏–≥–∞—Ü–∏—è –±—É–¥–µ—Ç –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—Ç—å—Å—è –≤ main app
      }
    };

    navigator.serviceWorker?.addEventListener('message', handleServiceWorkerMessage);
    
    return () => {
      navigator.serviceWorker?.removeEventListener('message', handleServiceWorkerMessage);
    };
  }, []);

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–æ–∫–µ–Ω–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä (—Å–∏–º—É–ª—è—Ü–∏—è)
  const syncTokenWithServer = useCallback(async (userId: string) => {
    if (!state.token) return false;

    try {
      // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –±—É–¥–µ—Ç API –≤—ã–∑–æ–≤
      console.log('üîÑ Syncing FCM token with server:', {
        userId,
        token: state.token,
        preferences
      });

      // –°–∏–º—É–ª—è—Ü–∏—è API –≤—ã–∑–æ–≤–∞
      const tokenData = {
        userId,
        fcmToken: state.token,
        preferences,
        deviceInfo: {
          userAgent: navigator.userAgent,
          platform: navigator.platform,
          timestamp: new Date().toISOString()
        }
      };

      localStorage.setItem('harmony_user_notification_data', JSON.stringify(tokenData));
      
      return true;
    } catch (error) {
      console.error('Error syncing token with server:', error);
      return false;
    }
  }, [state.token, preferences]);

  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
  const sendTestNotification = useCallback((type: 'reminder' | 'expiry' | 'balance' | 'promotion' = 'reminder') => {
    const testNotifications = {
      reminder: {
        title: '‚è∞ –ù–∞–ø–æ–º–∏–Ω–∞–Ω–∏–µ –æ –∑–∞–Ω—è—Ç–∏–∏',
        body: '–í–∞—à–µ –∑–∞–Ω—è—Ç–∏–µ –Ω–∞—á–Ω–µ—Ç—Å—è —á–µ—Ä–µ–∑ 30 –º–∏–Ω—É—Ç!',
        data: { type: 'reminder', action: 'view' }
      },
      expiry: {
        title: '‚ö†Ô∏è –ê–±–æ–Ω–µ–º–µ–Ω—Ç –∏—Å—Ç–µ–∫–∞–µ—Ç',
        body: '–í–∞—à –∞–±–æ–Ω–µ–º–µ–Ω—Ç –∏—Å—Ç–µ–∫–∞–µ—Ç —á–µ—Ä–µ–∑ 3 –¥–Ω—è. –ü—Ä–æ–¥–ª–∏—Ç–µ –µ–≥–æ —Å–µ–π—á–∞—Å!',
        data: { type: 'expiry', action: 'renew' }
      },
      balance: {
        title: 'üí∞ –ù–∏–∑–∫–∏–π –±–∞–ª–∞–Ω—Å',
        body: '–ù–∞ –≤–∞—à–µ–º –±–∞–ª–∞–Ω—Å–µ –æ—Å—Ç–∞–ª–æ—Å—å –º–∞–ª–æ –±–æ–Ω—É—Å–Ω—ã—Ö –±–∞–ª–ª–æ–≤',
        data: { type: 'balance', action: 'topup' }
      },
      promotion: {
        title: 'üî• –°–ø–µ—Ü–∏–∞–ª—å–Ω–æ–µ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏–µ!',
        body: '–°–∫–∏–¥–∫–∞ 20% –Ω–∞ –≤—Å–µ –∞–±–æ–Ω–µ–º–µ–Ω—Ç—ã –¥–æ –∫–æ–Ω—Ü–∞ –º–µ—Å—è—Ü–∞!',
        data: { type: 'promotion', action: 'view' }
      }
    };

    const notification = testNotifications[type];
    showLocalNotification(notification);
  }, []);

  return {
    // –°–æ—Å—Ç–æ—è–Ω–∏–µ
    isSupported: state.isSupported,
    permission: state.permission,
    token: state.token,
    isLoading: state.isLoading,
    error: state.error,
    preferences,

    // –ú–µ—Ç–æ–¥—ã
    initializeNotifications,
    savePreferences,
    syncTokenWithServer,
    sendTestNotification,

    // –£—Ç–∏–ª–∏—Ç—ã
    isEnabled: state.permission === 'granted' && !!state.token,
    needsPermission: state.isSupported && state.permission !== 'granted'
  };
}